문제를 해결하는 한 가지 방법은 다음과 같습니다.

입력에서 테스트 케이스 수 T를 읽습니다.
각 테스트 사례를 반복하고 다음을 수행합니다.
입력에서 카드 수 N을 읽습니다.
카드 번호 목록을 읽고 각 번호가 몇 개인지 세어보세요.
목록에서 가장 많이 나타나는 번호를 찾으십시오.
테스트 케이스 번호(#T)와 가장 많이 나오는 번호와 개수를 출력하세요.
이 솔루션을 구현하는 Python 코드는 다음과 같습니다.

파이썬
코드 복사
T = 정수(입력())

범위(T) 내의 i에 대해:
     N = 정수(입력())
     카드 = list(map(int, input().strip()))

     # 각 카드 번호의 빈도를 센다.
     개수 = [0] * 10
     카드 인 카드:
         카운트[카드] += 1

     # 가장 빈번한 카드 번호 찾기
     most_common_card = 최대(범위(10), 키=람다 x: (수[x], x))
트
     # 결과를 출력
     print(f"#{i+1} {most_common_card} {count[most_common_card]}")
max 함수는 가장 일반적인 카드 번호의 인덱스를 찾는 데 사용됩니다. 동점이 있는 경우 먼저 개수를 비교한 다음 숫자 자체를 비교하는 람다 함수를 사용하여 더 높은 숫자를 선택합니다. f-문자열은 테스트 케이스 번호로 출력 형식을 지정하는 데 사용됩니다. 먼저 카운트를 비교한 다음 숫자 자체를 비교하는 람다 함수입니다. f-문자열은 테스 사례 번호로 출력 형식을 지정하는 데 사용됩니다.