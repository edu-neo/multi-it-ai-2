def dp(n):
    if n == 1:  # 1인경우의 개수는 1개
        return 1
    elif n == 2:  # 2인 경우의 개수는 3개
        return 3  # 점화식이 2(n-2) 라고 2개가 아님
    return dp(n - 1) + 2 * (dp(n - 2))


testCase = int(input())
for i in range(testCase):
    n = int(input())
    print('#' + str(i + 1) + ' ' + str(dp(n // 10)))
    import sys
    sys.stdin = open('input.txt;)'
                     ''
                     '')

    T= int(input()__import__(

    ))

    어린이
    알고리즘
    교실의
    선생님은
    경우의
    수
    놀이를
    위해, 그림처럼
    가로x세로
    길이가
    10
    x20, 20
    x20인
    직사각형
    종이를
    잔뜩
    준비했다.

    그리고
    교실
    바닥에
    20
    xN
    크기의
    직사각형을
    테이프로
    표시하고, 이
    안에
    준비한
    종이를
    빈틈없이
    붙이는
    방법을
    찾아보려고
    한다.N이
    30
    인
    경우
    다음
    그림처럼
    종이를
    붙일
    수
    있다.

    10
    의
    배수인
    N이
    주어졌을
    때, 종이를
    붙이는
    모든
    경우를
    찾으려면
    테이프로
    만든
    표시한
    영역을
    몇
    개나
    만들어야
    되는지
    계산하는
    프로그램을
    만드시오.직사각형
    종이가
    모자라는
    경우는
    없다.

    [입력]

    첫
    줄에
    테스트
    케이스
    개수
    T가
    주어진다.
    1≤T≤50
    다음
    줄부터
    테스트
    케이스
    별로
    N이
    주어진다.
    10≤N≤300, N은
    10
    의
    배수

    [출력]

    각
    줄마다
    "#T"(T는
    테스트
    케이스
    번호)를
    출력한
    뒤, 답을
    출력한다.

    입력
    3
    30
    50
    70
    sample_input.txt
    출력
    # 1 5
    # 2 21
    # 3 85